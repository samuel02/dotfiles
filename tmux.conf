# Set default shell to zsh
set-option -g default-shell /bin/zsh

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color
set-option -ga terminal-overrides  ",xterm-kitty:Tc"

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set-option -g allow-rename off

set -g mouse on

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

set -g mode-keys vi
set -g monitor-activity on

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"\; display-message "copied to system clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind-key -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"\; display-message "copied to system clipboard"

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind-key c new-window -c "#{pane_current_path}"
bind-key h split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# pane resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

unbind q
bind q kill-pane

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# make session switching use entire screen
unbind s
bind-key s resize-pane -Z \; choose-tree -s "resize-pane -Z \; switch-client -t '%%'"

bind-key b split-window -fv -l 10 -c '#{pane_current_path}'
bind-key T swap-window -t 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# tmuxline statusbar (solarized dark)
set -g status-justify "left"

set -g status-left-length "100"
set -g status-right-length "100"
set -g status-left-attr "none"
set -g status-right-attr "none"

set-option -g status-bg colour0
set-option -g status-fg colour7
set-option -g status-attr "none"

# default window title colors
set-window-option -g window-status-fg colour10 #base0
set-window-option -g window-status-bg colour0
set-window-option -g window-status-attr "none"

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default

# pane border
set-option -g pane-border-fg colour11 #base02
set-option -g pane-active-border-fg colour14 #base01

# message text
set-option -g message-bg colour11 #base02
set-option -g message-fg colour7 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

set -g message-command-bg colour11
set -g message-command-fg colour7

set-window-option -g window-status-separator ""
set-window-option -g window-status-activity-bg "colour0"
set-window-option -g window-status-activity-attr "none"
set-window-option -g window-status-activity-fg "colour14"

set -g status-left ""
set -g status-right "#[fg=colour11,bg=colour0,nobold,nounderscore,noitalics]◀#[fg=colour7,bg=colour11] %Y-%m-%d %H:%M #[fg=colour14,bg=colour11,nobold,nounderscore,noitalics]◀#[fg=colour15,bg=colour14]   #(~/.dotfiles/bin/next-on-agenda) "
setw -g window-status-format "#[fg=colour10,bg=colour0] #I:#W "
setw -g window-status-current-format "#[fg=colour7,bg=colour11] #I:#W #[fg=colour11,bg=colour0,nobold,nounderscore,noitalics]▶"

set -g status-interval 60
