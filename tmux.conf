set-option -g default-terminal tmux-256color
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on
set-option -g allow-rename off

set-option -g mouse on
set-option -g focus-events on

# Use C-a as leader
unbind-key C-b
set-option -g prefix C-a
bind-key a send-prefix

set-option -g mode-keys vi
set-option -g monitor-activity on

# Don't scroll to bottom on selection
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-pipe "pbcopy"\; display-message "copied to system clipboard"

# No escape time for vi mode
set-option -sg escape-time 0

# Bigger history
set-option -g history-limit 50000

# New windows/pane in $PWD
bind-key c new-window -c "#{pane_current_path}"
bind-key h split-window -v -c '#{pane_current_path}'
bind-key v split-window -h -c '#{pane_current_path}'

# pane resizing
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

unbind-key =
bind-key = select-layout tiled

# Kill pane
unbind-key q
bind-key q kill-pane

# force a reload of the config file
unbind-key r
bind-key r source-file ~/.tmux.conf \; display "Reloaded!"

# make session switching use entire screen
unbind-key s
bind-key s choose-tree -Z -s

# fzf window switching
bind-key 0 run "tmux split-window -fv -l 6 'bash -ci ftwind'"

# Quick-pane
is_zoomed="tmux list-panes -F '#F' | grep -q Z"
bind-key b if-shell "$is_zoomed" "resize-pane -Z" "split-window -fv -l 10 -c '#{pane_current_path}'"

# Swap window to the top
bind-key T swap-window -t 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|fzf)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# tmuxline statusbar
set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g status-right-style "none"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none"
setw -g window-status-separator ""

is_dark_mode="$HOME/.bin/is-dark-mode"
if-shell "$is_dark_mode" "set-environment -g TMUX_THEME 'dark'" "set-environment TMUX_THEME 'light'"
if-shell "$is_dark_mode" "source $HOME/.tmux/dark-theme.conf" "source $HOME/.tmux/light-theme.conf"
