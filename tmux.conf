# Set default shell to zsh
set-option -g default-shell /bin/zsh

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal screen-256color

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

set -g mouse on

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Screen like binding
unbind C-b
set -g prefix C-a
bind a send-prefix

set -g mode-keys vi
set -g monitor-activity on

bind-key v split-window -h
bind-key h split-window -v

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"\; display-message "copied to system clipboard"

# Update default binding of `Enter` to also use copy-pipe
unbind-key -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"\; display-message "copied to system clipboard"

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"
unbind q
bind q kill-pane

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# make session switching use entire screen
unbind s
bind-key s resize-pane -Z \; choose-tree -s "resize-pane -Z \; switch-client -t '%%'"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# tmuxline statusbar
set -g status "on"
set -g status-justify "left"
set -g status-attr "none"
set -g message-command-bg "colour29"
set -g status-left-length "100"
set -g pane-active-border-fg "colour36"
set -g status-bg "colour23"
set -g message-command-fg "colour231"
set -g pane-border-fg "colour29"

set -g status-left-attr "none"
set -g status-right-attr "none"
set -g status-right-length "100"

set -g message-bg "colour29"
set -g message-fg "colour231"

setw -g window-status-fg "colour231"
setw -g window-status-attr "none"
setw -g window-status-activity-bg "colour23"
setw -g window-status-activity-attr "none"
setw -g window-status-activity-fg "colour36"
setw -g window-status-separator ""
setw -g window-status-bg "colour23"

set -g status-left "#[fg=colour231,bg=colour36] tmux #[fg=colour36,bg=colour23,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour29,bg=colour23,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour29] %Y-%m-%d  %H:%M #[fg=colour36,bg=colour29,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour36]    #(~/.dotfiles/bin/next-on-agenda) "

setw -g window-status-format "#[fg=colour231,bg=colour23] #I #[fg=colour231,bg=colour23] #W "
setw -g window-status-current-format "#[fg=colour23,bg=colour29,nobold,nounderscore,noitalics]#[fg=colour231,bg=colour29] #I #[fg=colour231,bg=colour29] #W #[fg=colour29,bg=colour23,nobold,nounderscore,noitalics]"

set -g status-interval 60
